// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String  @unique
  password String
  bio      String? @default("")
  image    String? @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articles Article[]

  comments Comment[]

  favorites Article[] @relation("UserFavorites")

  following User[] @relation("UserFollows")
  followers User[] @relation("UserFollows")
}

model Article {
  id          Int       @id @default(autoincrement())
  slug        String
  title       String
  description String
  body        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id])
  tags        Tag[]
  favoritedBy User[]    @relation("UserFavorites")
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  articleId Int
  article   Article @relation(fields: [articleId], references: [id])
}

model Tag {
  id       Int       @id @default(autoincrement())
  content  String
  articles Article[]
}
